(* ****** ****** *)

#infix x
#infixr ->
#infixl + - * /
#prefix !
#postfix !!

#nonfix foo bar

(* ****** ****** *)

typedef int2 = @(int, int)
typedef int2 = $(int, int)
typedef int2 = @{x=int, y=int}
typedef int2 = ${x=int, y=int}

(* ****** ****** *)

vtypedef int11 = @{x=int | y=int}
vtypedef int12 = ${x=int | y=int, z=int}

(* ****** ****** *)

absview array_v(a:vtype+)
absprop array_p(a:vtype+)

(* ****** ****** *)

abstype
arrayref
(a:vtype+, n:int) == ptr
absvtype
arrayptr
(a:vtype+, n:int) <= ptr

(* ****** ****** *)

datasort
ilist =
  | ilist_nil
  | ilist_cons of (int, ilist)
and
ilist2 =
  | ilist2_nil
  | ilist2_cons of (int, int, ilist2)

(* ****** ****** *)

vtypedef
fint1 =
{a,b:int|a > b}
(int(a), int(b)) ->
[c:int | c <= a*b] int(c)
vtypedef
fint2 =
{a,b:int|a > b}
 (int(a), int(b)) ->
#[c:int | c <= a*b] int(c)

(* ****** ****** *)

typedef int x y =
(lam (u, v): type => int(x+y))(0)(1)

(* ****** ****** *)

local

sexpdef foo = int * int

in (* in-of-local *)

sortdef pos = {a: int | a > 0}
sortdef neg = {a: int | a > 0}
sortdef nat = {a: int | a >= 0}

end // end of [local]

(* ****** ****** *)

(* end of [test_staexp.text] *)
